@using EventCombo.Models
@model AddAttandeeOrder

@{
  ViewBag.Title = "Manage Attendees - Add Attendees";
  Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

@section sidenav{
  <div id="sidebar" class="nav nav-stacked">
    @Html.Action("Sidenav", "ManageEvent", new { eventid = Model.EventId, CurrentItem = "manageattendees" })
  </div>
}

<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/manageattendees.css" rel="stylesheet" />
<link href="~/Content/flipclock.css" rel="stylesheet" />
<link href="~/Content/eventcombo-new.css" rel="stylesheet" />
<div id="purchasedTicketContainer" class="midd_cont">
  <div class="addAttendessTxt">
    <h1>Add Attendees</h1>
  </div>
  <input type="hidden" id="EventId" value="@(Model.EventId.ToString())" />
  <textarea id="Instruction" style="display:none">@Model.Note</textarea>
  <input type="hidden" id="PaymentTypeId" value="@(Model.PaymentType.PaymentTypeId)" />

  <div class="table-responsive attendeesAddTable">
    <table class="table" style="width:100%;">
      <thead>
        <tr class="attendeesAddTableTHTR">
          <th class="attendeesAddTableTH">Ticket Type</th>
          <th class="attendeesAddTableTH">Price *</th>
          <th class="attendeesAddTableTH">Quantity</th>
          <th class="attendeesAddTableTH">Amount Paid</th>
        </tr>
      </thead>
      <tbody id="TicketsTable">
        @foreach (var ticket in Model.Tickets)
        {
          <tr data-ticketid="@(ticket.Ticket.T_Id.ToString())" data-ticketquantity="@(ticket.Quantity.ToString())" data-ticketpaid="@(ticket.Paid.ToString())">
            <td class="attendeesAddTableTD">@(ticket.Ticket.T_name)</td>
            <td class="attendeesAddTableTD">@((ticket.Ticket.TicketTypeID ?? 0) == 3 ? "" : ("$" + (ticket.Ticket.Price ?? (decimal)0).ToString("N2")))</td>
            <td class="attendeesAddTableTD">@(ticket.Quantity.ToString())</td>
            <td class="attendeesAddTableTD">$@(ticket.Paid.ToString("N2"))</td>
          </tr>
        }
      </tbody>
    </table>
  </div>
  <div class="tableAttendeesTotal">
    <span class="tableAttendeesTotalTxt">TOTAL PAID</span>
    <input type="text" id="TicketsTotal" class="attenTableTotalCls" value="$@(Model.Tickets.Sum(t => t.Paid).ToString("N2"))" disabled />
  </div>

  <div class="addAttendeessStaticTxt">* Eventcombo does not charge any fees for manual orders.</div>

  <div class="form-group" style="margin: 20px 0px; display:none;">
    <div style="font-size: 18px; font-weight: bold;">
      PLEASE ENTER YOUR ACCOUNT INFORMATION
    </div>
    @if (HttpContext.Current.Session["AppId"] != null)
    {
      <span class="addAttendeessStaticTxt">Hi, @(Model.Email) Not you? <a href="#" onclick="NullSession();" id="nullsession">Sign Out</a></span>
    }
    else
    {
      <span class="addAttendeessStaticTxt">Have you used Eventcombo before?<a href="#" id="login">Sign In To Your Account</a></span>

    }

    <div class="attendeesAddTableTD">
      <label for="title" style="display:block; font-size: 18px;">FIRST NAME</label>
      <input type="text" id="OrderFirstName" class="attenTableQuantityCls" value="@(Model.FirstName)" onblur="checkEmpty(this, 'First Name', true)"/>
    </div>
    <div class="attendeesAddTableTD">
      <label for="title" style="display:block; font-size: 18px;">LAST NAME</label>
      <input type="text" id="OrderLastName" class="attenTableQuantityCls" value="@(Model.LastName)" onblur="checkEmpty(this, 'Last Name', true)" />
    </div>
    <div class="attendeesAddTableTD">
      <label for="title" style="display:block; font-size: 18px;">E-MAIL</label>
      <input type="text" id="OrderEmail" class="attenTableQuantityCls" value="@(Model.Email)" onblur="if(checkEmail(this, true)) checkEmpty(this, 'Email', true);" />
    </div>
  </div>

  <div class="form-group" style="margin: 20px 0px; ">
    <table class="table" style="width:100%;">
      <thead>
        <tr class="attendeesAddTableTHTR">
          <th class="attendeesAddTableTH">#</th>
          <th class="attendeesAddTableTH">Attendee Name</th>
          <th class="attendeesAddTableTH">Attendee Email</th>
          <th class="attendeesAddTableTH">Ticket Type</th>
          <th class="attendeesAddTableTH">Quantity</th>
        </tr>
      </thead>
      <tbody id="AttendeeTable">
        @for (var i = 0; i < Model.Tickets.Sum(t => t.Quantity); i++)
        {
            <tr>
                <td class="attendeesAddTableTD" width="10%">@((i + 1).ToString())</td>
                <td class="attendeesAddTableTD" width="30%"><input type="text" value="" id="aname@(i.ToString())" class="attenTableQuantityCls" placeholder="Name" /></td>
                <td class="attendeesAddTableTD" width="30%"><input type="text" value="" id="aemail@(i.ToString())" class="attenTableQuantityCls" placeholder="Email" onblur="checkEmail(this, true);" /></td>
                <td class="attendeesAddTableTD" width="20%">
                    <select id="aticket@(i.ToString())" class="attenTableQuantityCls">
                        @foreach (var ticket in Model.Tickets)
                        {
                            <option value="@ticket.Ticket.T_Id">@ticket.Ticket.T_name</option>
                        }
                    </select>
                </td>
                <td class="attendeesAddTableTD" width="10%">
                    <select id="aquantity@(i.ToString())" class="attenTableQuantityCls">
                        @for (var j = 0; j < Model.Tickets.Sum(t => t.Quantity); j++)
                        {
                            <option value="@(j + 1)">@(j + 1)</option>
                        }
                    </select>
                </td>
            </tr>
        }
      </tbody>
    </table>
  </div>

  <div class="Moderor" style="display: none;" id="diverror" tabindex="-1">
    <div class="er_UI_main">
      <div class="er_UI_img"></div>
      <div class="er_suc" id="errorMessage">
      </div>
      <button class="close" type="button" id="btnError">&#215;</button>
    </div>
  </div>

  <div>
    <a href="@Url.Action("Add", "ManageAttendees", new { eventId = Model.EventId })" class="btn btn-primary addAttendeessBtn">< BACK</a>
    <a href="javascript:void(0)" class="btn btn-primary addAttendeessBtn" onclick="sendOrder();">COMPLETE ORDER ></a>
  </div>

  <div id="spinner" class="spinner" style="display:none;">
    <img id="img-spinner" src="~/Images/ajaxloader1.gif" alt="Loading" />
  </div>

  <input type="hidden" id="sendError" value=""/>

</div>

<script type="text/javascript">

  $(function () {
    $(document).on({
      ajaxStart: function () { $("#spinner").show(); },
      ajaxStop: function () { $("#spinner").hide(); }
    });
  });

  function sendOrder() {

    var collectedTickets = [];
    var attendees = [];
    $('#TicketsTable tr').each(function (idx) {
      var ticket = {
        Quantity: $(this).data('ticketquantity'),
        Paid: $(this).data('ticketpaid'),
        Ticket: {
          T_Id: $(this).data('ticketid')
        }
      };
      if ((ticket.Quantity > 0) && ((ticket.Paid > 0) || (ticket.Ticket.TicketTypeID != 3)))
        collectedTickets.push(ticket);
    });

    $('#AttendeeTable tr').each(function (idx) {
      var aname = $(this).find('input[id^="aname"]').val();
      var aemail = $(this).find('input[id^="aemail"]').val();
      var aticket = $(this).find('select[id^="aticket"]').val();
      var aquantity = $(this).find('select[id^="aquantity"]').val();
      if ((aname) || (aemail))
        attendees.push({
          Name: aname,
          Email: aemail,
          TicketId: aticket,
          Quantity: aquantity
        });
    });

    var att = {
      EventId: $('#EventId').val(),
      PaymentType: { PaymentTypeId: $('#PaymentTypeId').val() },
      Note: $('#Instruction').val(),
      FirstName: $('#OrderFirstName').val(),
      LastName: $('#OrderLastName').val(),
      Email: $('#OrderEmail').val(),
      Tickets: collectedTickets,
      Attendees: attendees
    }

    $.ajax({
      type: "POST",
      url: "@Url.Action("SaveManualOrder", "ManageAttendees")",
      data: att,
      datatype: "html",
      success: function (data) {
        if (data >= 0)
          window.location.replace("@Html.Raw(Url.Action("RedirectAddPage", "ManageAttendees", new { eventId = Model.EventId, successMessage = "Your attendees were added successfully." }))");
        else {
          $('#sendError').attr('data-errormessage', "Error while processing your order. Order not saved.");
          showAllErrors();
        }
      }
    });
  }

  function markObj(obj, isValid, validClass, errorClass, errorMessage) {
    if (isValid) {
      $(obj).removeClass(errorClass);
      $(obj).addClass(validClass);
      $(obj).removeAttr('data-errormessage');
    }
    else {
      $(obj).removeClass(validClass);
      $(obj).addClass(errorClass);
      $(obj).attr('data-errormessage', errorMessage);
    }
    return isValid;
  }

  function showAllErrors() {
    var message = '';
    $('input[data-errormessage]').each(function (idx) {
      console.debug($(this));
      var str = $(this).attr('data-errormessage');
      console.debug($(this).attr('id'));
      console.debug(str);
      if (str) {
        if (message)
          message += '<br>' + str;
        else
          message = str;
      }
      console.debug(message);
    });

    console.debug(message);
    if (message) {
      $('#diverror').show();
      $('#errorMessage').html(message);
    }
    else {
      $('#diverror').hide();
    }
  }

  function checkEmail(obj, showError) {
    var email = $(obj).val();
    var res = markObj(obj, (validateEmail(email) || (!email.trim())), 'attenTableQuantityCls', 'attenTableQuantityClsErr', 'Wrong email address.');
    if (showError)
      showAllErrors();
    return res;
  }

  function validateOrder() {
    var res = true;
    if (!checkEmpty($('#OrderFirstName')[0], 'First Name', false))
      res = false;
    if (!checkEmpty($('#OrderLastName')[0], 'Last Name', false))
      res = false;
    if (!checkEmpty($('#OrderEmail')[0], 'Email address', false))
      res = false;
    showAllErrors();
    return res;
  }

  function checkEmpty(obj, text, showError) {
    var res = markObj(obj, $(obj).val().trim(), 'attenTableQuantityCls', 'attenTableQuantityClsErr', text + ' required.');
    if (showError)
      showAllErrors();
    return res;
  }

</script>