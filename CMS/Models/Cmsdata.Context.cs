//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmsEntities : DbContext
    {
        public EmsEntities()
            : base("name=EmsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Email_Tag> Email_Tag { get; set; }
        public virtual DbSet<Email_Template> Email_Template { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Permission_Detail> Permission_Detail { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<User_Permission_Detail> User_Permission_Detail { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Event_Orgnizer_Detail> Event_Orgnizer_Detail { get; set; }
        public virtual DbSet<EventCategory> EventCategories { get; set; }
        public virtual DbSet<EventImage> EventImages { get; set; }
        public virtual DbSet<EventOrganizer> EventOrganizers { get; set; }
        public virtual DbSet<EventSubCategory> EventSubCategories { get; set; }
        public virtual DbSet<EventTempImage> EventTempImages { get; set; }
        public virtual DbSet<EventType> EventTypes { get; set; }
        public virtual DbSet<EventVenue> EventVenues { get; set; }
        public virtual DbSet<Fee_Structure> Fee_Structure { get; set; }
        public virtual DbSet<MultipleEvent> MultipleEvents { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<TicketDeliveryMethod> TicketDeliveryMethods { get; set; }
        public virtual DbSet<TicketType> TicketTypes { get; set; }
        public virtual DbSet<Venue> Venues { get; set; }
        public virtual DbSet<Event_Detail> Event_Detail { get; set; }
    
        public virtual ObjectResult<string> GetSetUserRole(string user_Id, string gETSET, string role_Id)
        {
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("user_Id", user_Id) :
                new ObjectParameter("user_Id", typeof(string));
    
            var gETSETParameter = gETSET != null ?
                new ObjectParameter("GETSET", gETSET) :
                new ObjectParameter("GETSET", typeof(string));
    
            var role_IdParameter = role_Id != null ?
                new ObjectParameter("Role_Id", role_Id) :
                new ObjectParameter("Role_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSetUserRole", user_IdParameter, gETSETParameter, role_IdParameter);
        }
    
        public virtual ObjectResult<EventCreation> GetEventListing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventCreation>("GetEventListing");
        }
    }
}
