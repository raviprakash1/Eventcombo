@model CMS.Models.EmailTemplate
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Ckeditor/ckeditor.js"></script>
<script src="~/assets/js/jquery.ui.touch-punch.js"></script>
<style>
    .cke_editable {
        border: 1px solid #ccc;
        height: 300px;
    }
</style>
<section id="content_wrapper">

    <!-- Start: Topbar -->
    <header id="topbar" class="alt">
        <div class="topbar-left">
            <ol class="breadcrumb">

                <li class="crumb-icon">
                    <a href="dashboard.html">
                        <span class="glyphicon glyphicon-home"></span>
                    </a>
                </li>
                <li class="crumb-active">
                    Dashboard
                </li>
            </ol>
        </div>

    </header>
    <!-- End: Topbar -->
    <!-- Begin: Content -->
    <div id="content" class="animated fadeIn">
        <div class="row">

            <div class="col-md-2">
                <div class="panel">
                    <div class="panel-body p10">
                        <!-- Tags Menu -->
                        <div class="list-group list-group-links">
                            <div class="list-group-header"> Tags </div>
                            <ul id="contactList" class="list-group">
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="0" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        UserEmailID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="0" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable" >
                                        UserFirstNameID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="1" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        UserLastNameID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="2" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventNameID 
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="3" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventStartDateID 
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="4" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventEndDateID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="5" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventStartTimeID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="6" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventEndTimeID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="7" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventVenueID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="8" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        EventAddressID
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="9" draggable="true" tabindex="0" ondragstart="drag(event)" id="draggable">
                                        TicketOrderNumberID 
                                    </div>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <div class="contact h-card ui-widget-content ui-draggable" data-contact="10" draggable="true" tabindex="0"  ondragstart="drag(event)" id="draggable">
                                        DealOrderNumberID
                                    </div>
                                </li>
                            </ul>
                            @*<ul id="allfields" class="list-group">
                                <li class="list-group-item em_bor_bot">
                                   
                                  <a href="#" ondragstart="drag(event)" draggable="true">UserFirstNameID</a>
                                </li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true"> UserLastNameID</a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true"> EventNameID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true"> EventStartDateID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true">  EventEndDateID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true"> EventStartTimeID</a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true">   EventEndTimeID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true">EventVenueID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true"> EventAddressID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true">  TicketOrderNumberID </a>
</li>
                                <li class="list-group-item em_bor_bot">
                                    <a href="#" ondragstart="drag(event)" draggable="true">   DealOrderNumberID </a>
</li>
                            </ul>*@

                        </div>

                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="panel">
                   
                    <div class="panel-body" id="cart">
                        <div class="panel-heading">
                            <div class="col-md-12" style="display:none;" id="divError">
                                <div class="alert alert-danger alert-dismissable"  >
                                    <button class="close" aria-hidden="true" data-dismiss="alert" type="button">&#215;</button>
                                    <i class="fa fa-info pr10"></i>
                                   <span id="spanid" ></span>
                                </div>
                            </div>

                            <div class="col-lg-12">
                                @Html.TextBoxFor(m => m.Template_Name, new { @class = "form-control wel_tem_name fs20", id = "inputStandard", @readonly = "readonly",value="Template" })
                            
                            </div>

                        </div>
                      @using (Html.BeginForm("Index", "Email", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                      {
                        
                            <div class="form-group">
                                <label  class="col-lg-1 control-label">&nbsp;</label>
                                <div class="col-lg-8">

                                    
                                 </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputStandard" class="col-lg-1 control-label">To</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(m => m.To, new { @class = "form-control", id = "To", @placeholder = "Type Here..."  })

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputStandard" class="col-lg-1 control-label">From</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(m => m.From, new { @class = "form-control", id = "From", @placeholder = "Type Here...", onDrop = "blur();return false;" })

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputStandard" class="col-lg-1 control-label">Cc</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(m => m.CC, new { @class = "form-control", id = "CC", @placeholder = "Type Here...", onDrop = "blur();return false;" })

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputStandard" class="col-lg-1 control-label">Bcc</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(m => m.Bcc, new { @class = "form-control", id = "Bcc", @placeholder = "Type Here...", onDrop = "blur();return false;" })

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputStandard" class="col-lg-1 control-label">Subject</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(m => m.Subject, new { @class = "form-control txtSubject", id = "Subject", @placeholder = "Type Here..." , ondrop = "drop(event)", ondragover = "allowDrop(event)" })

                                    </div>
                                </div>
                          @Html.TextAreaFor(m => m.ckeditor1, 10, 63, new { id= "editor1", @value= " This is the < b > editor </ b > .......",@class= "txtSubject"})
                               
                                <br>

                               @Html.HiddenFor(m => m.emailtag , new { id = "emailtag" })
                           <button class="btn btn-primary col-sm-3" type="submit" id="btnsave">Save</button>



                      }
                    </div>
                </div>

            </div>
            <div class="col-md-2">
                <div class="panel">
                    <div class="panel-body p10">
                        <!-- Tags Menu -->
                        <div class="list-group list-group-links">
                            <div class="list-group-header"> Template Name </div>
                            <a href="~/Email/Index?templatetag=email_welcome&templatename=Welcome" class="list-group-item em_bor_bot">
                                Welcome Email
                            </a>
                        
                            <a href="~/Email/Index?templatetag=email_friend&templatename=Email a Friend" class="list-group-item em_bor_bot">
                                Email a Friend
                            </a>
                         
                            <a href="~/Email/Index?templatetag=email_contact_tickets&templatename=Contact Tickets" class="list-group-item em_bor_bot">
                               Contact Tickets
                            </a>
                            <a href="~/Email/Index?templatetag=email_error&templatename=Error" class="list-group-item em_bor_bot">
                             Error
                            </a>
                            <a href="~/Email/Index?templatetag=email_lost_pwd&templatename=Lost password" class="list-group-item em_bor_bot">
                                 Lost Password
                            </a>
                            <a href="~/Email/Index?templatetag=email_new_registration&templatename=New Registration" class="list-group-item em_bor_bot">
                                 New Registration
                            </a>
                            <a href="~/Email/Index?templatetag=email_new_ticket_sold&templatename=New Ticket Sold" class="list-group-item em_bor_bot">
                                 New Ticket Sold
                            </a>
                            <a href="~/Email/Index?templatetag=email_new_deal_sold&templatename=New Deal Sold" class="list-group-item em_bor_bot">
                                 New Deal Sold
                            </a>
                            <a href="~/Email/Index?templatetag=dealinvite&templatename=Deal Invite" class="list-group-item em_bor_bot">
                                Deal Invite 
                            </a>
                            <a href="~/Email/Index?templatetag=eventinvite&templatename=Event Invite" class="list-group-item em_bor_bot">
                                Event Invite 
                            </a>
                            <a href="~/Email/Index?templatetag=dealchange&templatename=Deal Change" class="list-group-item em_bor_bot">
                                Deal Change 
                            </a>
                            <a href="~/Email/Index?templatetag=eventchange&templatename=Event Change" class="list-group-item em_bor_bot">
                                Event Change 
                            </a>
                            <a href="~/Email/Index?templatetag=dealcancelled&templatename=Deal Cancelled" class="list-group-item em_bor_bot">
                                Deal Cancelled 
                            </a>
                            <a href="~/Email/Index?templatetag=eventcancelled&templatename=Event Cancelled" class="list-group-item em_bor_bot">
                                Event Cancelled 
                            </a>
                            <a href="~/Email/Index?templatetag=abuse&templatename=abuse" class="list-group-item em_bor_bot">
                                Abuse 
                            </a>
                            <a href="~/Email/Index?templatetag=new_deal_notification_email&templatename=New Deal Notification" class="list-group-item em_bor_bot">
                                New Deal Notification
                            </a>
                            <a href="~/Email/Index?templatetag=new_event_notification_email&templatename=New Event Notification" class="list-group-item em_bor_bot">
                                New Event Notification
                             </a>
                            <a href="~/Email/Index?templatetag=email_welcome_deal&templatename=Welcome Deal" class="list-group-item em_bor_bot">
                                Welcome Deal
                            </a>
                            <a href="~/Email/Index?templatetag=email_welcome_ticket&templatename=Welcome Ticket" class="list-group-item em_bor_bot">
                                Welcome Ticket 
                            </a>
                          
                            <a href="~/Email/Index?templatetag=email_notify_tix_cust&templatename=Notify Tix Cust" class="list-group-item em_bor_bot">
                                Notify Tix cust 
                            </a>
                            <a href="~/Email/Index?templatetag=email_event_submission&templatename=Event Submission" class="list-group-item em_bor_bot">
                                Email Event Submission
                            </a>
                            <a href="~/Email/Index?templatetag=email_deal_submission&templatename=Deal Submission" class="list-group-item em_bor_bot">
                                Email Deal Submission
                            </a>
                            <a href="~/Email/Index?templatetag=email_ticket_purchase&templatename=Ticket Purchase" class="list-group-item em_bor_bot">
                                Email Ticket Purchase
                            </a>
                            <a href="~/Email/Index?templatetag=email_deal_purchase&templatename=Deal Purchase" class="list-group-item em_bor_bot">
                                Email Deal Purchase
                            </a>
                           
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: Content -->

</section>
<script>

    $(function () {
        $("#draggable").draggable();
    });

    var data;
    function drop(ev) {
        ev.preventDefault();
        data = ev.dataTransfer.getData("text");
        console.log(ev);
        var dropText;
        dropText = "$$" + data.trim() + "$$";
        console.log(dropText);
        var target = ev.target || ev.srcElement;
        //var idtarget = document.getElementById($('#' + ev.target.id));
        console.log(target.id);
        var ids = $('#' + target.id);
        var droparea = document.getElementById(ids);
        //var range1 = droparea.selectionStart;
        //var range2 = droparea.selectionEnd;
        if ((target.id == "To" || target.id == "From" || target.id == "CC" || target.id == "Bcc") && data.trim() == "UserEmailID")
        {
            var value = $('#' + target.id).val();

            //var str1 = val.substring(0, range1);
            //var str3 = val.substring(range1, val.length);
            $('#' + target.id).val(value + " " + dropText);

        }
        else
        {
            var value = $('#' + target.id).val();

            //var str1 = val.substring(0, range1);
            //var str3 = val.substring(range1, val.length);
            $('#' + target.id).val(value + " " + dropText);


        }
       
       
    }
    
    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(event) {

        if (!event) event = window.event;
        var target = event.target || event.srcElement;
        var content = target.innerText|| target.textContent;
        event.dataTransfer.setData("text", content);
        console.log(target.innerText || target.textContent);
        
    }
    //$('#Subject').focus(function () {
    //    $('#Subject').addClass('Insertinto');
    //    //var ctl = document.getElementById('Subject');
    //    //var startPos = ctl.selectionStart;
    //    //var endPos = ctl.selectionEnd;
    //    //alert(startPos + ", " + endPos);

    //});
    //$('#ckeditor1').focus(function () {
    //    $('#ckeditor1').addClass('Insertinto');
    //});
    ////$('#Subject').blur(function () {
    ////    $('#Subject').removeClass('Insertinto');
    ////});
    //$("span.dbclickcss").dblclick(function () {
    //    alert($(this).text());
    //    var text = $('input.Insertinto').val();
    //    text += "   $$" + $(this).text() + "$$";
    //    $('input.Insertinto').val(text);
    //})
                // Replace the <textarea id="editor1"> with a CKEditor
                // instance, using default configuration.
    //CKEDITOR.replace('editor1');

    //$(document).ready(function () {
    //    CKEDITOR.on('instanceReady', function (ev) {

    //        //console.log(ev.editor);
    //       // console.log(ev.editor.document);

    //        ev.editor.document.on('dragenter', function (ev) {
    //            console.log("Yep we get here")
    //            ev.data.preventDefault(true);
    //            console.log(ev);
    //        })

    //        ev.editor.document.on('dragover', function (ev) {
    //           // console.log(ev);
    //           //console.log("Yep we get here too")
    //            ev.data.preventDefault(true);
    //        })
    //        ev.editor.document.on('drop', function (e) {
    //           // e.preventDefault();
    //           // e.stopPropagation();
    //           // e.data.preventDefault(true);
    //            console.log("Element was dropped");
    //            //console.log(data);
    //            //e.data.$.srcElement.fir
    //            //var data = e.dataTransfer.getData("text");
    //            //console.log(e.data);
    //            var c;
    //            var a = e.data.$.srcElement.innerText;
    //            console.log(a);
    //            var b = e.data.$.srcElement.firstChild.nodeValue;
    //            console.log(b);
    //            if (b != null)
    //            {
                   
    //                 c = a.replace(b, '');
    //                 c = '$$' + c + '$$';
    //                 e.data.$.target.innerHTML = b + c;

    //            } else
    //            {
    //                console.log('asdasdasd');
    //                c = '$$' + a + '$$';
    //                e.data.$.target.innerHTML = "<p>"+c+"</p>";
    //            }




             
    //            console.log(c);
    //           // var b = "<p>";
    //         //   e.data.$.target.innerHTML =b+c;
    //            //console.log(document.getElementsByClassName('cke_editable'));
    //            console.log(e);
    //        });
    //    });


    
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnsave').click(function () {


            var tomail = $('#To').val();
            var flag = false;
            var frommail = $('#From').val();
            var cc = $('#CC').val();
            var msg = "";
            var emailmsg = "";
            var bccmail = $('#Bcc').val();
            if (tomail == "")
            {
                $('#To').addClass('err-bor');
                msg += "To Address can't be empty \n";
                flag = true;
            } else {

                $('#To').removeClass('err-bor');
               
            }
           
            if (frommail != "") {

                if (!validateEmail(frommail)) {
                   
                    emailmsg += frommail + "\n";
                    $('#From').addClass('err-bor');
                    flag = true;
                  
                } else {
                    $('#From').removeClass('err-bor');

                }
                
            }
        
            if (bccmail != "") {
                if (bccmail.indexOf(",") > -1) {
                    var res = bccmail.split(",");
                    for (i = 0; i < res.length; i++) {
                        if (!validateEmail(res[i])) {
                            $('#Bcc').addClass('err-bor');
                            emailmsg += res[i] + "\n";
                            flag = true;
                        }
                    }
                }
                else if (!validateEmail(bccmail)) {
                    $('#Bcc').addClass('err-bor');
                    emailmsg += bccmail;
                    flag = true;
                }
                else 
                {
                    $('#Bcc').removeClass('err-bor');

                }
               
            }
        
            
            if (cc != "") {
             
                if (cc.indexOf(",") > -1) {
                 
                    var res = cc.split(",");
                    for (i = 0; i < res.length; i++) {
                      
                        if (!validateEmail(res[i])) {
                            $('#CC').addClass('err-bor');
                            emailmsg += res[i] + "\n";
                          
                            flag = true;
                        }
                    }
                }
                else if (!validateEmail(cc)) {
                    $('#CC').addClass('err-bor');
                    emailmsg += cc;
                    flag = true;
                }
                else {

                    $('#CC').removeClass('err-bor');
                }
               
            }
           
            if (!validateEmail(tomail)) {
                emailmsg += tomail;
                flag = true;

            }
            
            var invalid = "Invalid E-mail Id:\n";
            if (emailmsg != "")
            {
                emailmsg= invalid + emailmsg;
                msg += "\n" + emailmsg;
                flag = true;
            }
            if (flag) {
                $('#divError').css('display', 'block');
                $('#spanid').html(msg);
                setTimeout(function () { $('#divError').css('display', 'none'); $('input[type=text]').removeClass('err-bor') }, 3000);
                //alert(msg);
                return false;
            }

        })
    });
    function validateEmail(sEmail) {
        var filter = /^[\w\-\.\+]+\@@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,4}$/;

        if (filter.test(sEmail)) {

            return true;
        }
        else {


            return false;
        }
    }
</script>
@*<script type="text/javascript">

    $(document).ready(function () {
       
        $("#contactList li div").draggable({
            appendTo: "body",
            helper: "clone",
            cursor: "select",
            revert: "invalid"
        });
        //initDroppable($("#cke_editable p"));
        initDroppable($(".txtSubject"));
        function initDroppable($elements) {
            console.log($elements);
            $elements.droppable({
                hoverClass: "textarea",
                accept: ":not(.ui-sortable-helper)",
                drop: function (event, ui) {
                    var $this = $(this);
                    console.log($this);
                    var tempid = ui.draggable.text();
                    var dropText;
                    dropText = "$$" + tempid + "$$";
                    var ids = $this.attr('id');
                    var droparea = document.getElementById(ids);
                    var range1 = droparea.selectionStart;
                    var range2 = droparea.selectionEnd;
                    var val = droparea.value;
                    var str1 = val.substring(0, range1);
                    var str3 = val.substring(range1, val.length);
                    droparea.value = str1 + dropText + str3;
                }
            });
        }


    });

</script>*@

<script>
		'use strict';

		var CONTACTS = [
			{ name: 'UserFirstNameID' },
			{ name: 'UserLastNameID' },
			{ name: 'EventNameID' },
			{ name: 'EventStartDateID '},
			{ name: 'EventEndDateID' },
			{ name: 'EventStartTimeID' },
			{ name: 'EventEndTimeID'},
			{ name: 'EventVenueID' },
            {name:'EventAddressID'},
            {name:'TicketOrderNumberID'},
            {name:'DealOrderNumberID'}

		];

		CKEDITOR.disableAutoInline = true;

		// Implements a simple widget that represents contact details (see http://microformats.org/wiki/h-card).
		CKEDITOR.plugins.add( 'hcard', {
			requires: 'widget',

			init: function( editor ) {
				editor.widgets.add( 'hcard', {
					allowedContent: 'span(!h-card); a[href](!u-email,!p-name); span(!p-tel)',
					requiredContent: 'span(h-card)',
					pathName: 'hcard',

					upcast: function( el ) {
						return el.name == 'span' && el.hasClass( 'h-card' );
					}
				} );

				// This feature does not have a button, so it needs to be registered manually.
				editor.addFeature( editor.widgets.registered.hcard );

				// Handle dropping a contact by transforming the contact object into HTML.
				// Note: All pasted and dropped content is handled in one event - editor#paste.
				editor.on( 'paste', function( evt ) {
					var contact = evt.data.dataTransfer.getData( 'contact' );
					if ( !contact ) {
						return;
					}

					evt.data.dataValue =
						'' +
							'$$' + contact.name + '$$' +
						'';
				} );
			}
		} );

		// When an item in the contact list is dragged, copy its data into drag and drop data transfer.
		// This data is later read by the editor#paste listener in the hcard plugin defined above.
		CKEDITOR.document.getById( 'contactList' ).on( 'dragstart', function( evt ) {
			// The target may be some element inside the draggable div (e.g. the image), so get the div.h-card.
			var target = evt.data.getTarget().getAscendant( 'div', true );

			// Initialization of CKEditor data transfer facade is a necessary step to extend and unify native
			// browser capabilities. For instance, Internet Explorer does not support any other data type than 'text' and 'URL'.
			// Note: evt is an instance of CKEDITOR.dom.event, not a native event.
			CKEDITOR.plugins.clipboard.initDragDataTransfer( evt );

			var dataTransfer = evt.data.dataTransfer;

			// Pass an object with contact details. Based on it, the editor#paste listener in the hcard plugin
			// will create HTML to be inserted into the editor. We could set text/html here as well, but:
			// * It is a more elegant and logical solution that this logic is kept in the hcard plugin.
			// * We do not know now where the content will be dropped and the HTML to be inserted
			// might vary depending on the drop target.
			dataTransfer.setData( 'contact', CONTACTS[ target.data( 'contact' ) ] );

			// We need to set some normal data types to backup values for two reasons:
			// * In some browsers this is necessary to enable drag and drop into text in editor.
			// * The content may be dropped in another place than the editor.
			dataTransfer.setData( 'text/html', target.getText() );

			// You can still access and use the native dataTransfer - e.g. to set the drag image.
			// Note: IEs do not support this method... :(.
			//if ( dataTransfer.$.setDragImage ) {
			//	dataTransfer.$.setDragImage( target.findOne( 'i' ).$, 0, 0 );
			//}
		} );

		// Initialize the editor with the hcard plugin.
		CKEDITOR.inline( 'editor1', {
		    extraPlugins: 'hcard,sourcedialog,justify'
            
		});
		
	//	CKEDITOR.replace('editor1', {
    //    height: 210,
    //    on: {
    //        instanceReady: function (evt) {
    //            $('.cke').addClass('admin-skin cke-hide-bottom');
    //        }
    //    },
    //});

</script>